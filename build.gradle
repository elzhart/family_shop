plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
    id 'org.sonarqube' version '4.4.1.3373'
}

jacoco {
    toolVersion = '0.8.10'
}

group = 'com.familyshop'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5") // парсинг JSON в токене


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true   // нужно для SonarQube
        html.required = true
        csv.required = false
    }
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'familyshop-backend'
        property 'sonar.projectName', 'FamilyShop :: Backend'
        property 'sonar.sourceEncoding', 'UTF-8'

        property 'sonar.sources', 'src/main/java'
        property 'sonar.tests',   'src/test/java'

        // где лежит байткод (для Java/Kotlin)
        property 'sonar.java.binaries', 'build/classes/java/main'

        // покрытие JaCoCo
        property 'sonar.java.coveragePlugin', 'jacoco'
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'

        // отчёты JUnit
        property 'sonar.junit.reportPaths', 'build/test-results/test'

        // исключения при анализе (пример)
        property 'sonar.exclusions', '**/config/**,**/dto/**,**/generated/**,**/db/migration/**'
    }
}
